
 may reads: { S2[i, j] -> T[i + j]; S4[i, j] -> T[i + j]; S3[i, j] -> B[i, j]; S4[i, j] -> C[j, i]; S1[i, j] -> A[i, j] }
 must writes: { S1[i, j] -> T[i + j]; S4[i, j] -> C[j, i]; S3[i, j] -> T[i + j]; S2[i, j] -> C[i, j] }
 may writes: { S1[i, j] -> T[i + j]; S4[i, j] -> C[j, i]; S3[i, j] -> T[i + j]; S2[i, j] -> C[i, j] }



SCHEDULE: { domain: "{ S1[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S4[i, j] : 0 <= i <= 2 and 0 <= j <= 2 }", child: { schedule: "[{ S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2 }]" } }

AST:
{
  for (int c1 = 0; c1 <= 2; c1 += 1)
    for (int c2 = 0; c2 <= 2; c2 += 1) {
      S1(c1, c2);
      S2(c1, c2);
    }
  for (int c1 = 0; c1 <= 2; c1 += 1)
    for (int c2 = 0; c2 <= 2; c2 += 1) {
      S3(c1, c2);
      S4(c1, c2);
    }
}


*** FLOW 1 (FLOW / RAW)

ACCESS: { sink: "{ S2[i, j] -> T[i + j]; S4[i, j] -> T[i + j]; S3[i, j] -> B[i, j]; S4[i, j] -> C[j, i]; S1[i, j] -> A[i, j] }", must_source: "{ S1[i, j] -> T[i + j]; S4[i, j] -> C[j, i]; S3[i, j] -> T[i + j]; S2[i, j] -> C[i, j] }", may_source: "{ S1[i, j] -> T[i + j]; S4[i, j] -> C[j, i]; S3[i, j] -> T[i + j]; S2[i, j] -> C[i, j] }", schedule: { domain: "{ S1[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S4[i, j] : 0 <= i <= 2 and 0 <= j <= 2 }", child: { schedule: "[{ S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2 }]" } } }

RAW: { S3[i, j] -> [S4[i' = i, j' = j] -> T[i + j]] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [S4[i' = j, j' = i] -> C[i, j]] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [S2[i' = i, j' = j] -> T[i + j]] : 0 <= i <= 2 and 0 <= j <= 2 }

*** FLOW 2 (FALSE DEPENDENCES)


ACCESS: { sink: "{ S1[i, j] -> T[i + j]; S4[i, j] -> C[j, i]; S3[i, j] -> T[i + j]; S2[i, j] -> C[i, j] }", must_source: "{ S1[i, j] -> T[i + j]; S4[i, j] -> C[j, i]; S3[i, j] -> T[i + j]; S2[i, j] -> C[i, j] }", may_source: "{ S2[i, j] -> T[i + j]; S3[i, j] -> B[i, j]; S1[i, j] -> T[i + j]; S4[i, j] -> C[j, i]; S3[i, j] -> T[i + j]; S4[i, j] -> T[i + j]; S2[i, j] -> C[i, j]; S1[i, j] -> A[i, j] }", schedule: { domain: "{ S1[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S4[i, j] : 0 <= i <= 2 and 0 <= j <= 2 }", child: { schedule: "[{ S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2 }]" } } }

FALSE FULL(WAR + WAW): { S1[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S3[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S1[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S2[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S2[i, j] -> [S4[i' = j, j' = i] -> C[i, j]] : 0 <= i <= 2 and 0 <= j <= 2; S2[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S2[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S4[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2 }

FALSE (WAR + WAW): 0x1284680

ANTI (WAR) { S2[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S2[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S1[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S3[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S1[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S2[i, j] -> [S4[i' = j, j' = i] -> C[i, j]] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j = 0] -> [S4[i' = 0, j' = i] -> C[i, 0]] : 0 <= i <= 2; S2[i = 2, j] -> [S4[i' = j, j' = 2] -> C[2, j]] : 0 < j <= 2; S4[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S2[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2 }

ANTI FULL (WAR) { S2[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S2[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S1[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S3[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S1[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S2[i, j] -> [S4[i' = j, j' = i] -> C[i, j]] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j = 0] -> [S4[i' = 0, j' = i] -> C[i, 0]] : 0 <= i <= 2; S2[i = 2, j] -> [S4[i' = j, j' = 2] -> C[2, j]] : 0 < j <= 2; S4[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S2[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2 }

ANTI (WAW) { S2[i, j] -> S4[i' = j, j' = i] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j = 0] -> S4[i' = 0, j' = i] : 0 <= i <= 2; S2[i = 2, j] -> S4[i' = j, j' = 2] : 0 < j <= 2; S4[i, j] -> S3[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S1[i, j] -> S1[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> S3[i' = j, j' = 2] : 0 < j <= 2; S1[i, j = 0] -> S3[i' = 0, j' = i] : 0 <= i <= 2; S3[i, j] -> S3[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S2[i = 2, j] -> S3[i' = j, j' = 2] : 0 < j <= 2; S2[i, j = 0] -> S3[i' = 0, j' = i] : 0 <= i <= 2; S2[i, j] -> S1[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2 }

ANTI FULL (WAW) { S2[i, j] -> S4[i' = j, j' = i] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j = 0] -> S4[i' = 0, j' = i] : 0 <= i <= 2; S2[i = 2, j] -> S4[i' = j, j' = 2] : 0 < j <= 2; S4[i, j] -> S3[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S1[i, j] -> S1[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> S3[i' = j, j' = 2] : 0 < j <= 2; S1[i, j = 0] -> S3[i' = 0, j' = i] : 0 <= i <= 2; S3[i, j] -> S3[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S2[i = 2, j] -> S3[i' = j, j' = 2] : 0 < j <= 2; S2[i, j = 0] -> S3[i' = 0, j' = i] : 0 <= i <= 2; S2[i, j] -> S1[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2 }

*** FLOW 3 (LIVE INS)


ACCESS: { sink: "{ S2[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S2[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S1[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S3[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S1[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S2[i, j] -> [S4[i' = j, j' = i] -> C[i, j]] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j = 0] -> [S4[i' = 0, j' = i] -> C[i, 0]] : 0 <= i <= 2; S2[i = 2, j] -> [S4[i' = j, j' = 2] -> C[2, j]] : 0 < j <= 2; S4[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S2[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2 }", may_source: "{ S2[i, j] -> S4[i' = j, j' = i] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j = 0] -> S4[i' = 0, j' = i] : 0 <= i <= 2; S2[i = 2, j] -> S4[i' = j, j' = 2] : 0 < j <= 2; S4[i, j] -> S3[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S1[i, j] -> S1[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> S3[i' = j, j' = 2] : 0 < j <= 2; S1[i, j = 0] -> S3[i' = 0, j' = i] : 0 <= i <= 2; S3[i, j] -> S3[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S2[i = 2, j] -> S3[i' = j, j' = 2] : 0 < j <= 2; S2[i, j = 0] -> S3[i' = 0, j' = i] : 0 <= i <= 2; S2[i, j] -> S1[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2 }", schedule: { domain: "{ S1[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S4[i, j] : 0 <= i <= 2 and 0 <= j <= 2 }", child: { schedule: "[{ S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2 }]" } } }

LIVE INS: { S1[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S3[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S1[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S2[i, j] -> [S1[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2; S2[i, j] -> [S4[i' = j, j' = i] -> C[i, j]] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j = 0] -> [S4[i' = 0, j' = i] -> C[i, 0]] : 0 <= i <= 2; S2[i = 2, j] -> [S4[i' = j, j' = 2] -> C[2, j]] : 0 < j <= 2; S2[i = 2, j] -> [S3[i' = j, j' = 2] -> T[2 + j]] : 0 < j <= 2; S2[i, j = 0] -> [S3[i' = 0, j' = i] -> T[i]] : 0 <= i <= 2; S4[i, j] -> [S3[i' = 1 + i, j' = -1 + j] -> T[i + j]] : 0 <= i <= 1 and 0 < j <= 2 }

*** FLOW 4 (DEAD)


ACCESS: { sink: "{ S1[i, j] -> T[i + j]; S4[i, j] -> C[j, i]; S3[i, j] -> T[i + j]; S2[i, j] -> C[i, j] }", may_source: "{ S2[i, j] -> S4[i' = j, j' = i] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j = 0] -> S4[i' = 0, j' = i] : 0 <= i <= 2; S2[i = 2, j] -> S4[i' = j, j' = 2] : 0 < j <= 2; S4[i, j] -> S3[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S1[i, j] -> S1[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S1[i = 2, j] -> S3[i' = j, j' = 2] : 0 < j <= 2; S1[i, j = 0] -> S3[i' = 0, j' = i] : 0 <= i <= 2; S3[i, j] -> S3[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2; S2[i = 2, j] -> S3[i' = j, j' = 2] : 0 < j <= 2; S2[i, j = 0] -> S3[i' = 0, j' = i] : 0 <= i <= 2; S2[i, j] -> S1[i' = 1 + i, j' = -1 + j] : 0 <= i <= 1 and 0 < j <= 2 }", schedule: { domain: "{ S1[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] : 0 <= i <= 2 and 0 <= j <= 2; S4[i, j] : 0 <= i <= 2 and 0 <= j <= 2 }", child: { schedule: "[{ S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(i)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(j)] : 0 <= i <= 2 and 0 <= j <= 2 }, { S4[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S2[i, j] -> [(1)] : 0 <= i <= 2 and 0 <= j <= 2; S1[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2; S3[i, j] -> [(0)] : 0 <= i <= 2 and 0 <= j <= 2 }]" } } }

DEAD: {  }